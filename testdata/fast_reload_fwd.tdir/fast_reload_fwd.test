# #-- fast_reload_fwd.test --#
# source the master var file when it's there
[ -f ../.tpkg.var.master ] && source ../.tpkg.var.master
# use .tpkg.var.test for in test variable passing
[ -f .tpkg.var.test ] && source .tpkg.var.test

PRE="../.."
. ../common.sh

echo "> unbound-control status"
$PRE/unbound-control -c ub.conf status
if test $? -ne 0; then
	echo "wrong exit value."
	exit 1
else
	echo "exit value: OK"
fi

# test that the forwards and stubs point to the right upstream.
for x in example1.org example2.org example3.org stub1.org stub2.org stub3.org; do
	echo ""
	echo "dig www.$x [upstream is NS1]"
	dig @127.0.0.1 -p $UNBOUND_PORT www.$x A 2>&1 | tee outfile
	if grep "1.2.3.1" outfile; then
		echo "response OK"
	else
		echo "www.$x got the wrong answer"
		exit 1
	fi
done

for x in example4.org example5.org example6.org stub4.org stub5.org stub6.org; do
	echo ""
	echo "dig www.$x [upstream is NS2]"
	dig @127.0.0.1 -p $UNBOUND_PORT www.$x A 2>&1 | tee outfile
	if grep "1.2.3.2" outfile; then
		echo "response OK"
	else
		echo "www.$x got the wrong answer"
		exit 1
	fi
done

for x in auth1.org auth2.org auth3.org; do
	echo ""
	echo "dig www.$x [auth is 1.2.3.4]"
	dig @127.0.0.1 -p $UNBOUND_PORT www.$x A 2>&1 | tee outfile
	if grep "1.2.3.4" outfile; then
		echo "response OK"
	else
		echo "www.$x got the wrong answer"
		exit 1
	fi
done

echo ""
echo "> replace config file ub.conf"
mv ub.conf ub.conf.orig
mv ub.conf2 ub.conf
echo ""
echo "> unbound-control fast_reload"
$PRE/unbound-control -c ub.conf fast_reload +vv 2>&1 | tee output
if test $? -ne 0; then
	echo "wrong exit value."
	exit 1
else
	echo "exit value: OK"
fi

# for the previous digs to www.x the cached value should remain the same
# but for new lookups, to www2.x the new upstream should be used.
for x in example1.org example2.org example3.org stub1.org stub2.org stub3.org; do
	echo ""
	echo "dig www.$x [upstream is NS1]"
	dig @127.0.0.1 -p $UNBOUND_PORT www.$x A 2>&1 | tee outfile
	if grep "1.2.3.1" outfile; then
		echo "response OK"
	else
		echo "www.$x got the wrong answer"
		exit 1
	fi
done

for x in example4.org example5.org example6.org stub4.org stub5.org stub6.org; do
	echo ""
	echo "dig www.$x [upstream is NS2]"
	dig @127.0.0.1 -p $UNBOUND_PORT www.$x A 2>&1 | tee outfile
	if grep "1.2.3.2" outfile; then
		echo "response OK"
	else
		echo "www.$x got the wrong answer"
		exit 1
	fi
done

# new lookups for www2 go to the upstream.
for x in example2.org example4.org example6.org stub2.org stub4.org stub6.org; do
	echo ""
	echo "dig www2.$x [upstream is NS1]"
	dig @127.0.0.1 -p $UNBOUND_PORT www2.$x A 2>&1 | tee outfile
	if grep "1.2.3.1" outfile; then
		echo "response OK"
	else
		echo "www2.$x got the wrong answer"
		exit 1
	fi
done

for x in example1.org example3.org example5.org stub1.org stub3.org stub5.org; do
	echo ""
	echo "dig www2.$x [upstream is NS2]"
	dig @127.0.0.1 -p $UNBOUND_PORT www2.$x A 2>&1 | tee outfile
	if grep "1.2.3.2" outfile; then
		echo "response OK"
	else
		echo "www2.$x got the wrong answer"
		exit 1
	fi
done

# unchanged auth
for x in auth1.org; do
	echo ""
	echo "dig www.$x [auth is 1.2.3.4]"
	dig @127.0.0.1 -p $UNBOUND_PORT www.$x A 2>&1 | tee outfile
	if grep "1.2.3.4" outfile; then
		echo "response OK"
	else
		echo "www.$x got the wrong answer"
		exit 1
	fi
done

# deleted auth
for x in auth2.org; do
	echo ""
	echo "dig www.$x [auth is deleted]"
	dig @127.0.0.1 -p $UNBOUND_PORT www.$x A 2>&1 | tee outfile
	if grep "SERVFAIL" outfile; then
		echo "response OK"
	else
		echo "www.$x got the wrong answer"
		exit 1
	fi
done

# changed and added auth
for x in auth3.org auth4.org; do
	echo ""
	echo "dig www.$x [auth is 1.2.3.5]"
	dig @127.0.0.1 -p $UNBOUND_PORT www.$x A 2>&1 | tee outfile
	if grep "1.2.3.5" outfile; then
		echo "response OK"
	else
		echo "www.$x got the wrong answer"
		exit 1
	fi
done

exit 0
